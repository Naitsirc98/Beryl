#version 450 core

struct DrawCommand {
    uint count;
    uint instanceCount;
    uint firstIndex;
    uint baseVertex;
    uint baseInstance;
};

struct BoundingBox {
    vec3 min;
    vec3 max;
};

// TODO: need camera matrices

layout(local_size_x = 1) in;

layout(std430) buffer CommandBuffer {
    DrawCommand[] commands;
};

layout(std430) readonly buffer Bounds {
    BoundingBox boundingBoxes[];
};

layout(std430) readonly buffer Matrices {
    mat4 modelMatrices[];
};

layout(std430) readonly buffer MeshIDs {
    uint meshIDs[];
};

void main() {

    const uint index = gl_LocalInvocationID.x;

    BoundingBox aabb = boundingBoxes[meshIDs[index]];

    uint visible = 1; // Frustum culling, 1 = visible, 0 otherwise

    DrawCommand meshCommandData = commands[meshIDs[index]];

    DrawCommand command = meshCommandData;
    command.instanceCount = 1;

    commands[index] = command;
}